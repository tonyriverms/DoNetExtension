//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoNetExtension.System.Collections.Generic {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class GenericResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GenericResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DoNetExtension.System.Collections.Generic.GenericResources", typeof(GenericResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The capacity of array dictionary is fixed at {0}. This array dictionary is now full and cannot accept new items..
        /// </summary>
        internal static string ERR_ArrayDictionary_ExceedsCapacity {
            get {
                return ResourceManager.GetString("ERR_ArrayDictionary_ExceedsCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index out of boundary. This array list only contains {0} items while the index is {1}..
        /// </summary>
        internal static string ERR_ArrayDictionary_IndexOutOfBoundary {
            get {
                return ResourceManager.GetString("ERR_ArrayDictionary_IndexOutOfBoundary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sychronization between the key-value dictionary and the value-key dictionary failed..
        /// </summary>
        internal static string ERR_BiDictionary_SynchronizationFailed {
            get {
                return ResourceManager.GetString("ERR_BiDictionary_SynchronizationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key &quot;{0}&quot; already exists in this dictionary..
        /// </summary>
        internal static string ERR_Common_KeyConflict {
            get {
                return ResourceManager.GetString("ERR_Common_KeyConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key &quot;{0}&quot; does not exist in this dictionary..
        /// </summary>
        internal static string ERR_Common_KeyNotFound {
            get {
                return ResourceManager.GetString("ERR_Common_KeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path already exists..
        /// </summary>
        internal static string ERR_Common_PathAlreadyExist {
            get {
                return ResourceManager.GetString("ERR_Common_PathAlreadyExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream for hasing must be empty..
        /// </summary>
        internal static string ERR_DictionaryOnStream_HashStreamMustBeEmpty {
            get {
                return ResourceManager.GetString("ERR_DictionaryOnStream_HashStreamMustBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to pop element because the heap is empty..
        /// </summary>
        internal static string ERR_Heap_EmptyHeap {
            get {
                return ResourceManager.GetString("ERR_Heap_EmptyHeap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A ReadOnlyArrayDictionary is read-only. Key-value pairs cannot be added, updated or removed..
        /// </summary>
        internal static string ERR_ReadOnlyArrayDictionary_ReadOnly {
            get {
                return ResourceManager.GetString("ERR_ReadOnlyArrayDictionary_ReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot remove a node that is not a child..
        /// </summary>
        internal static string ERR_Tree_NotParent {
            get {
                return ResourceManager.GetString("ERR_Tree_NotParent", resourceCulture);
            }
        }
    }
}
